[{"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/index.js":"1","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/App.js":"2","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/reportWebVitals.js":"3","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/home/Home.js":"4","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/about/About.js":"5","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/signUp/SignUp.js":"6","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/signIn/SignIn.js":"7","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/dashboard/Dashboard.js":"8","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/feedback/Feedback.js":"9","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/dashboardItem/DashboardItem.js":"10","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/context/AuthContext.js":"11","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/inputField/InputField.js":"12","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/button/Button.js":"13","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/navBar/NavBar.js":"14","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/navbar/Navbar.js":"15","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/uploadList/UploadList.js":"16","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/listItem/ListItem.js":"17","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/routing/PrivateRoute.js":"18","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/detailPage/DetailPage.js":"19","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/routing/Routes.js":"20","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/routing/AdminPrivateRoute.js":"21"},{"size":494,"mtime":1614506484107,"results":"22","hashOfConfig":"23"},{"size":360,"mtime":1614281032748,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1611140283576,"results":"25","hashOfConfig":"23"},{"size":6475,"mtime":1614525705365,"results":"26","hashOfConfig":"23"},{"size":1616,"mtime":1614506121733,"results":"27","hashOfConfig":"23"},{"size":4049,"mtime":1614509958947,"results":"28","hashOfConfig":"23"},{"size":3702,"mtime":1614509907431,"results":"29","hashOfConfig":"23"},{"size":3156,"mtime":1614524435793,"results":"30","hashOfConfig":"23"},{"size":7215,"mtime":1614525705299,"results":"31","hashOfConfig":"23"},{"size":2183,"mtime":1614519794132,"results":"32","hashOfConfig":"23"},{"size":3552,"mtime":1614505797164,"results":"33","hashOfConfig":"23"},{"size":863,"mtime":1614506264893,"results":"34","hashOfConfig":"23"},{"size":510,"mtime":1614506103481,"results":"35","hashOfConfig":"23"},{"size":2058,"mtime":1612720536792,"results":"36","hashOfConfig":"23"},{"size":2525,"mtime":1614506399433,"results":"37","hashOfConfig":"23"},{"size":2777,"mtime":1614525705264,"results":"38","hashOfConfig":"23"},{"size":748,"mtime":1614506316970,"results":"39","hashOfConfig":"23"},{"size":410,"mtime":1614072921971,"results":"40","hashOfConfig":"23"},{"size":4522,"mtime":1614526337772,"results":"41","hashOfConfig":"23"},{"size":1600,"mtime":1614524518017,"results":"42","hashOfConfig":"23"},{"size":440,"mtime":1614281135969,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"srzg7f",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/index.js",[],["93","94"],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/App.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/reportWebVitals.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/home/Home.js",["95","96","97"],"import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport './Home.css';\nimport InputField from \"../../components/inputField/InputField\";\nimport Button from \"../../components/button/Button\";\nimport axios from 'axios';\nimport { useAuthState } from \"../../context/AuthContext\";\n\nfunction Home() {\n    // maak hier de states aan voor het formulier\n    const [uploadFormArtistName, setUploadFormArtistName] = useState('');\n    const [uploadFormEmail, setUploadFormEmail] = useState('');\n    const [uploadFormSongName, setUploadFormSongName] = useState('');\n    const [uploadFormFile, setUploadFormFile] = useState('');\n    const [uploadFormMessage, setUploadFormMessage] = useState('');\n\n    const [error, setError] = useState('');\n    const [formError, setFormError] = useState('');\n    const [createUserSuccess, setCreateUserSuccess] = useState(false);\n    const [protectedData, setProtectedData] = useState('')\n\n    useEffect(() => {\n        async function getProtectedData() {\n            setFormError('');\n            try {\n                const token = localStorage.getItem('token');\n\n                const response = await axios.get(`http://localhost:8080/api/users/user`, {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${token}`,\n                    }\n                });\n\n                setProtectedData(response.data);\n            } catch(e) {\n                setFormError('Er is iets misgegaan bij het ophalen van de data')\n            }\n        }\n        getProtectedData();\n    }, []);\n\n    async function handleSubmit(e) {\n        setError('');\n        e.preventDefault();\n        try {\n            const formData = {\n                artist_name: uploadFormArtistName,\n                email: uploadFormEmail,\n                song_name: uploadFormSongName,\n                upload_file: uploadFormFile,\n                message: uploadFormMessage\n            }\n\n            const token = localStorage.getItem('token');\n            const response = await axios.post(`http://localhost:8080/api/uploadforms`, formData,{\n                header: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                }\n            });\n\n            if (response.status === 201) {\n                setCreateUserSuccess(true);\n            }\n\n        } catch (e) {\n            console.error(e)\n            setError('Er is iets misgegaan met het uploaden');\n        }\n    }\n\n    return (\n        <>\n            <div className=\"background-img__home\">\n                <header className=\"header-container\">\n                    <Link to=\"/\" className=\"active-link\">\n                        <h2 className=\"header__h2\">Producer</h2>\n                    </Link>\n                    <Link to=\"/home-upload-list\">\n                        <h2 className=\"header__h2\">Upload List</h2>\n                    </Link>\n                </header>\n\n                <div className=\"form-container\">\n                    <form onSubmit={handleSubmit}>\n                        <fieldset className=\"form__outline\">\n                            <InputField\n                                id=\"details-name\"\n                                className={\"input-field input-field--white \"}\n                                type=\"text\"\n                                placeholder=\"Oliver heldens\"\n                                value={uploadFormArtistName}\n                                onChange={(e) => setUploadFormArtistName(e.target.value)}\n                            >\n                                Artist Name\n                            </InputField>\n\n                            <InputField\n                                id=\"email-address\"\n                                className={\"input-field input-field--white\"}\n                                type=\"email\"\n                                placeholder=\"oliverheldens@gmail.com\"\n                                value={protectedData.email}\n                                onChange={(e) => setUploadFormEmail(e.target.value)}\n                            >\n                                Email Address\n                            </InputField>\n\n                            <InputField\n                                id=\"artist-name\"\n                                className={\"input-field input-field--white\"}\n                                type=\"text\"\n                                placeholder=\"Amazing song\"\n                                value={uploadFormSongName}\n                                onChange={(e) => setUploadFormSongName(e.target.value)}\n                            >\n                                Song name\n                            </InputField>\n\n                            <InputField\n                                id=\"music-upload\"\n                                className={\"input-field input-field--white\"}\n                                type=\"file\"\n                                placeholder=\"amazing-demo.mp3\"\n                                value={uploadFormFile}\n                                onChange={(e) => setUploadFormFile(e.target.value)}\n                            >\n                                Music\n                            </InputField>\n\n                            <label htmlFor=\"personal-message\">personal message</label>\n                            <textarea\n                                name=\"message\"\n                                id=\"personal-message\"\n                                cols=\"30\"\n                                rows=\"5\"\n                                maxLength=\"250\"\n                                placeholder=\"This music was inspired by...\"\n                                value={uploadFormMessage}\n                                onChange={(e) => setUploadFormMessage(e.target.value)}\n                            />\n                            <Button\n                                className=\"button button__orange button-form\"\n                                type=\"submit\"\n                            >Submit Demo</Button>\n                            {/*geef de user feedback dat de demo goed was geupload*/}\n                            {createUserSuccess === true && <p>The demo was uploaded succesfully!</p>}\n                        </fieldset>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Home;","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/about/About.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/signUp/SignUp.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/signIn/SignIn.js",["98","99"],"import React, { useState, useContext, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport './SignIn.css';\nimport { AuthContext, useAuthState } from \"../../context/AuthContext\";\nimport logo from \"../../assets/logo/heldeep-logo-white.png\";\nimport axios from \"axios\";\nimport InputField from \"../../components/inputField/InputField\";\nimport Button from \"../../components/button/Button\";\n\nfunction SignIn() {\n    const { login } = useContext(AuthContext);\n    const { isAuthenticated, isAdmin } = useAuthState();\n\n    const [password, setPassword] = useState('');\n    const [username, setUsername] = useState('');\n\n    const history = useHistory();\n\n    const [loading, toggleLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        if (isAuthenticated === true) {\n            if(isAdmin) {\n                // je wordt gepusht na het inloggen naar de dashboard pagina als je admin bent\n                history.push('/dashboard');\n            } else {\n                // je wordt gepusht na het inloggen naar de home pagina als je user bent\n                history.push('/');\n            }\n        }\n    }, [isAuthenticated])\n\n    async function onSubmit(e) {\n        setError('');\n        e.preventDefault();\n\n        try {\n            const response = await axios.post(`http://localhost:8080/api/auth/signin`, {\n                username: username,\n                password: password,\n            })\n            // we roepen hier de context-functie login aan. de context gaat dan met de data die\n            // we hebben teruggekregen alles op de juiste plek zetten\n            // handel het inloggen aan de voorkant af met de data die we binnen hebben gekregen\n            login(response.data);\n\n        } catch(e) {\n            console.error(e);\n            setError('Inloggen is mislukt');\n        }\n    }\n\n    return (\n        <>\n            <div className=\"background-img__signIn\">\n                <div className=\"container-logo__signIn\">\n                    <img className=\"logo-signIn\" src={logo} alt=\"logo\"/>\n                </div>\n                <div className=\"form-container__signIn\">\n                    <h1>Demodrop</h1>\n                    <form onSubmit={onSubmit} className=\"form-signIn\">\n\n                        <InputField\n                            id=\"username-field\"\n                            className={\"input-field input-field--black\"}\n                            type=\"text\"\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                        >\n                            Username\n                        </InputField>\n\n                        <InputField\n                            id=\"password-field\"\n                            className={\"input-field input-field--black\"}\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                            Password\n                        </InputField>\n\n                        <Button\n                            type=\"submit\"\n                            className={\"button button-form button__purple\"}\n                            disabled={loading}\n                        >\n                            {loading ? 'Loading...' : 'Sign In'}\n                        </Button>\n                        {error && <p>{error}</p>}\n                    </form>\n                    <p>Dont have an account? <Link to=\"/signup\">Create new account</Link></p>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default SignIn;","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/dashboard/Dashboard.js",["100","101","102"],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/feedback/Feedback.js",["103","104"],"import React, { useEffect, useState } from 'react';\nimport './Feedback.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"../../components/button/Button\";\nimport InputField from \"../../components/inputField/InputField\";\nimport axios from 'axios';\n\nfunction Feedback() {\n\n    const [message, setMessage] = useState([]);\n\n    const [feedbackMessage, setFeedbackMessage] = useState('');\n    const [feedbackArtistName, setFeedbackArtistName] = useState('');\n\n    const history = useHistory();\n    const [createUserSuccess, setCreateUserSuccess] = useState(false);\n    const [protectedData, setProtectedData] = useState('');\n    const [formError, setFormError] = useState('');\n\n    useEffect(() => {\n        async function getProtectedData() {\n            setFormError('');\n            try {\n                const token = localStorage.getItem('token');\n                const response = await axios.get('http://localhost:8080/api/users/user', {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${token}`,\n                    }\n                });\n\n                setProtectedData(response.data);\n            } catch(e) {\n                setFormError('Er is iets misgegaan bij het ophalen van de data')\n            }\n        }\n\n        getProtectedData();\n    }, []);\n\n    // Onderstaand zijn de 4 async functions om de feedbacktext uit de database op te vragen\n    async function getFeedbackOne() {\n        try {\n            const token = localStorage.getItem('token');\n            const response = await axios.get(`http://localhost:8080/api/feedbacktexts/`, {\n                header: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                }\n            });\n            setMessage(response.data);\n            setFeedbackMessage(message[0].message)\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    async function getFeedbackTwo() {\n        try {\n            const token = localStorage.getItem('token');\n            const response = await axios.get(`http://localhost:8080/api/feedbacktexts/`, {\n                header: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                }\n            });\n            setMessage(response.data);\n            setFeedbackMessage(message[1].message)\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    async function getFeedbackThree() {\n        try {\n            const token = localStorage.getItem('token');\n            const response = await axios.get(`http://localhost:8080/api/feedbacktexts/`, {\n                header: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                }\n            });\n            setMessage(response.data);\n            setFeedbackMessage(message[2].message)\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    async function getFeedbackFour() {\n        try {\n            const token = localStorage.getItem('token');\n            const response = await axios.get(`http://localhost:8080/api/feedbacktexts/`, {\n                header: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                }\n            });\n            setMessage(response.data);\n            setFeedbackMessage(message[3].message)\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault(e);\n        setCreateUserSuccess(true);\n    }\n\n    return (\n        <>\n            <div className=\"background-img__feedback\">\n                <div className=\"feedback-header\">\n                    <div className=\"feedback-header__arrow\">\n                        <FontAwesomeIcon icon={faArrowLeft} onClick={() => {\n                            history.goBack()\n                        }}/>\n                    </div>\n                    <h2 className=\"feedback-header__h2\">\n                        Feedback\n                    </h2>\n                </div>\n                <div className=\"feedback-container\">\n                    <div className=\"feedback-container__buttons\">\n                        <Button\n                            type=\"button\"\n                            className=\"button-feedback\"\n                            onClick={getFeedbackOne}\n                        >i like this!...</Button>\n                        <Button\n                            type=\"button\"\n                            className=\"button-feedback\"\n                            onClick={getFeedbackTwo}\n                        >i would change...</Button>\n                        <Button\n                            type=\"button\"\n                            className=\"button-feedback\"\n                            onClick={getFeedbackThree}\n                        >i want to use this...</Button>\n                        <Button\n                            type=\"button\"\n                            className=\"button-feedback\"\n                            onClick={getFeedbackFour}\n                        >for the future...</Button>\n                    </div>\n                    <div className=\"feedback-container__form\">\n                        <form onSubmit={handleSubmit}>\n                            <InputField\n                                id=\"feedback-artist-name\"\n                                className={\"input-field input-field--white\"}\n                                type=\"text\"\n                                placeholder=\"Artist name here\"\n                                value={feedbackArtistName}\n                                onChange={(e) => {setFeedbackArtistName(e.target.value)}}\n                            >\n                                Name / Artist name\n                            </InputField>\n                            <label htmlFor=\"feedback-message\"/>\n                            <textarea\n                                name=\"message\"\n                                id=\"feedback-message\"\n                                cols=\"5\"\n                                rows=\"20\"\n                                placeholder=\"Press 1 of the buttons to reveal a message\"\n                                value={feedbackMessage}\n                                onChange={(e) => {setFeedbackMessage(e.target.value)}}\n                            />\n                            <Button\n                                className=\"button button-form button__orange\"\n                                type=\"submit\"\n                            >Sent feedback</Button>\n                            {/*geef de admin feedback dat het feedback formulier goed is verstuurd*/}\n                            {createUserSuccess === true && <p>The feedback was sent succesfully to (artist_name)</p>}\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\n\nexport default Feedback;","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/dashboardItem/DashboardItem.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/context/AuthContext.js",["105"],"import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthContext = createContext({});\n\nfunction AuthContextProvider({ children }) {\n\n    const history = useHistory()\n\n    const [authState, setAuthState] = useState({\n        status: 'pending',\n        error: null,\n        user: null,\n    });\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n\n        async function getUserInfo() {\n            try {\n                const response = await axios.get(`http://localhost:8080/api/users`, {\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            Authorization: `Bearer ${token}`,\n                        },\n                    }\n                );\n\n                // Met het resultaat van de axios get, wordt de authstate aangevuld.\n                setAuthState({\n                    ...authState,\n                    user: {\n                        id: response.id,\n                        username: response.username,\n                        email: response.email,\n                        roles: response.roles,\n                    },\n                    status: 'done',\n                });\n\n            } catch (e) {\n                setAuthState({\n                    ...authState,\n                    user: null,\n                    error: e,\n                    status: 'done',\n                });\n            }\n        }\n\n        if (authState.user === null && token) {\n            getUserInfo();\n        } else {\n            setAuthState({\n                ...authState,\n                error: null,\n                user: null,\n                status: 'done'\n            });\n        }\n\n    }, []);\n\n    function login(data) {\n        // plaats hier de accesstoken in je localstorage\n        localStorage.setItem('token', data.accessToken)\n\n        setAuthState({\n            ...authState,\n            user: {\n                // de data.'info' komt uit het object wat we binnen krijgen vanuit de database\n                username: data.username,\n                email: data.email,\n                roles: data.roles,\n                isAdmin: data.roles.includes(\"ROLE_ADMIN\"),\n            }\n        })\n    }\n\n    function logout() {\n        // clear hier de accesstoken uit je localstorage\n        localStorage.clear();\n        setAuthState({\n            ...authState,\n            user: null,\n        })\n        history.push('/login');\n    }\n\n    const providerData = {\n        ...authState,\n        login,\n        logout,\n    };\n\n    return (\n        <AuthContext.Provider value={providerData}>\n            {authState.status === 'done' && children}\n            {authState.status === 'pending' && <p>Loading...</p>}\n        </AuthContext.Provider>\n    );\n}\n\nfunction useAuthState() {\n    const authState = useContext(AuthContext);\n\n    // iemand is geauthoriseerd wanneer de status === done\n    // en als de gebruiker in de authstate staat\n    const isDone = authState.status === 'done';\n    const isAuthenticated = authState.user !== null && isDone;\n    // iemand is admin wanneer de gebruiker in de authstate staat\n    // de status op done staat\n    // en de user de isAdmin attribuut heeft\n    const isAdmin = authState.user !== null && authState.user.isAdmin;\n\n    return {\n        ...authState,\n        isAuthenticated: isAuthenticated,\n        isAdmin: isAdmin,\n    }\n}\n\nexport {\n    AuthContext,\n    AuthContextProvider,\n    useAuthState,\n}","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/inputField/InputField.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/button/Button.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/navBar/NavBar.js",["106","107","108"],"import React, { useContext, useEffect } from 'react';\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport './NavBar.css';\nimport logo from '../../assets/logo/heldeep-logo-white.png';\nimport { AuthContext, useAuthState } from \"../../context/AuthContext\";\n\nfunction NavBar() {\n\n    const history = useHistory();\n\n    const { isAuthenticated } = useAuthState();\n    const { logout } = useContext(AuthContext);\n\n    // useEffect(() => {\n    //     if (isAuthenticated === false) {\n    //         history.push('/signin');\n    //     }\n    // }, [isAuthenticated]);\n\n    return (\n        <nav>\n            <div className=\"nav-container\">\n                <img src={logo} alt=\"logo\"/>\n                {isAuthenticated ? (\n                    <>\n                    <ul>\n                        <li>\n                            <NavLink exact to=\"/\" activeClassName=\"active-link\">Home</NavLink>\n                        </li>\n\n                        <li>\n                            <a href=\"https://heldeeprecords.com/\">Heldeep records</a>\n                        </li>\n\n                        <li>\n                            <NavLink to=\"/about\" activeClassName=\"active-link\">About</NavLink>\n                        </li>\n\n                        <li>\n                            <NavLink to=\"/profile\" activeClassName=\"active-link\">Profile</NavLink>\n                        </li>\n\n                        <li>\n                            <NavLink to=\"/signin\">Logout</NavLink>\n                        </li>\n                    </ul>\n                    </>\n                ) : (\n                    <>\n                    <ul>\n                        <li>\n                            <NavLink exact to=\"/\" activeClassName=\"active-link\">Home</NavLink>\n                        </li>\n\n                        <li>\n                            <a href=\"https://heldeeprecords.com/\">Heldeep records</a>\n                        </li>\n\n                        <li>\n                            <NavLink to=\"/about\" activeClassName=\"active-link\">About</NavLink>\n                        </li>\n\n                        <li>\n                            <NavLink to=\"/profile\" activeClassName=\"active-link\">Profile</NavLink>\n                        </li>\n\n                        <li>\n                            <NavLink to=\"/signin\">Logout</NavLink>\n                        </li>\n                    </ul>\n                    </>\n                )}\n            </div>\n        </nav>\n    );\n}\n\nexport default NavBar;",["109","110"],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/navbar/Navbar.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/uploadList/UploadList.js",["111","112","113"],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/listItem/ListItem.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/routing/PrivateRoute.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/detailPage/DetailPage.js",["114","115","116","117"],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/routing/Routes.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/routing/AdminPrivateRoute.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":7,"column":10,"nodeType":"124","messageId":"125","endLine":7,"endColumn":22},{"ruleId":"122","severity":1,"message":"126","line":17,"column":12,"nodeType":"124","messageId":"125","endLine":17,"endColumn":17},{"ruleId":"122","severity":1,"message":"127","line":18,"column":12,"nodeType":"124","messageId":"125","endLine":18,"endColumn":21},{"ruleId":"122","severity":1,"message":"128","line":19,"column":21,"nodeType":"124","messageId":"125","endLine":19,"endColumn":34},{"ruleId":"129","severity":1,"message":"130","line":32,"column":8,"nodeType":"131","endLine":32,"endColumn":25,"suggestions":"132"},{"ruleId":"122","severity":1,"message":"126","line":10,"column":12,"nodeType":"124","messageId":"125","endLine":10,"endColumn":17},{"ruleId":"122","severity":1,"message":"127","line":11,"column":12,"nodeType":"124","messageId":"125","endLine":11,"endColumn":21},{"ruleId":"122","severity":1,"message":"133","line":12,"column":12,"nodeType":"124","messageId":"125","endLine":12,"endColumn":25},{"ruleId":"122","severity":1,"message":"133","line":19,"column":12,"nodeType":"124","messageId":"125","endLine":19,"endColumn":25},{"ruleId":"122","severity":1,"message":"127","line":20,"column":12,"nodeType":"124","messageId":"125","endLine":20,"endColumn":21},{"ruleId":"129","severity":1,"message":"134","line":63,"column":8,"nodeType":"131","endLine":63,"endColumn":10,"suggestions":"135"},{"ruleId":"122","severity":1,"message":"136","line":1,"column":29,"nodeType":"124","messageId":"125","endLine":1,"endColumn":38},{"ruleId":"122","severity":1,"message":"137","line":9,"column":11,"nodeType":"124","messageId":"125","endLine":9,"endColumn":18},{"ruleId":"122","severity":1,"message":"138","line":12,"column":13,"nodeType":"124","messageId":"125","endLine":12,"endColumn":19},{"ruleId":"118","replacedBy":"139"},{"ruleId":"120","replacedBy":"140"},{"ruleId":"122","severity":1,"message":"126","line":10,"column":12,"nodeType":"124","messageId":"125","endLine":10,"endColumn":17},{"ruleId":"122","severity":1,"message":"127","line":11,"column":12,"nodeType":"124","messageId":"125","endLine":11,"endColumn":21},{"ruleId":"122","severity":1,"message":"133","line":12,"column":12,"nodeType":"124","messageId":"125","endLine":12,"endColumn":25},{"ruleId":"122","severity":1,"message":"126","line":16,"column":12,"nodeType":"124","messageId":"125","endLine":16,"endColumn":17},{"ruleId":"122","severity":1,"message":"127","line":17,"column":12,"nodeType":"124","messageId":"125","endLine":17,"endColumn":21},{"ruleId":"122","severity":1,"message":"133","line":18,"column":12,"nodeType":"124","messageId":"125","endLine":18,"endColumn":25},{"ruleId":"129","severity":1,"message":"141","line":26,"column":8,"nodeType":"131","endLine":26,"endColumn":10,"suggestions":"142"},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'useAuthState' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'formError' is assigned a value but never used.","'toggleLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'isAdmin'. Either include them or remove the dependency array.","ArrayExpression",["145"],"'protectedData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.",["146"],"'useEffect' is defined but never used.","'history' is assigned a value but never used.","'logout' is assigned a value but never used.",["143"],["144"],"React Hook useEffect has a missing dependency: 'getUpload'. Either include it or remove the dependency array.",["147"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [history, isAdmin, isAuthenticated]",{"range":"154","text":"155"},"Update the dependencies array to be: [authState]",{"range":"156","text":"157"},"Update the dependencies array to be: [getUpload]",{"range":"158","text":"159"},[1181,1198],"[history, isAdmin, isAuthenticated]",[1800,1802],"[authState]",[836,838],"[getUpload]"]