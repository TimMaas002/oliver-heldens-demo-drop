[{"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/index.js":"1","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/App.js":"2","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/reportWebVitals.js":"3","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/home/Home.js":"4","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/about/About.js":"5","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/signUp/SignUp.js":"6","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/signIn/SignIn.js":"7","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/dashboard/Dashboard.js":"8","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/feedback/Feedback.js":"9","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/profile/Profile.js":"10","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/dashboardItem/DashboardItem.js":"11","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/context/AuthContext.js":"12","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/inputField/InputField.js":"13","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/button/Button.js":"14","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/navBar/NavBar.js":"15","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/navbar/Navbar.js":"16","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/uploadList/UploadList.js":"17","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/listItem/ListItem.js":"18","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/routing/PrivateRoute.js":"19","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/detailPage/DetailPage.js":"20","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/routing/Routes.js":"21","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/routing/AdminPrivateRoute.js":"22","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/detailPage/AdminDetailPage.js":"23"},{"size":705,"mtime":1612622980980,"results":"24","hashOfConfig":"25"},{"size":411,"mtime":1614072896131,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1611140283576,"results":"27","hashOfConfig":"25"},{"size":5330,"mtime":1614088594299,"results":"28","hashOfConfig":"25"},{"size":1617,"mtime":1612882112570,"results":"29","hashOfConfig":"25"},{"size":4046,"mtime":1614096702832,"results":"30","hashOfConfig":"25"},{"size":3784,"mtime":1614096726072,"results":"31","hashOfConfig":"25"},{"size":1640,"mtime":1613409074665,"results":"32","hashOfConfig":"25"},{"size":4279,"mtime":1614095147353,"results":"33","hashOfConfig":"25"},{"size":3110,"mtime":1613477134416,"results":"34","hashOfConfig":"25"},{"size":1923,"mtime":1614095879123,"results":"35","hashOfConfig":"25"},{"size":3686,"mtime":1614097370712,"results":"36","hashOfConfig":"25"},{"size":693,"mtime":1613396273821,"results":"37","hashOfConfig":"25"},{"size":395,"mtime":1614094664214,"results":"38","hashOfConfig":"25"},{"size":2058,"mtime":1612720536792,"results":"39","hashOfConfig":"25"},{"size":2601,"mtime":1614096454422,"results":"40","hashOfConfig":"25"},{"size":1924,"mtime":1614099165890,"results":"41","hashOfConfig":"25"},{"size":659,"mtime":1614099613138,"results":"42","hashOfConfig":"25"},{"size":410,"mtime":1614072921971,"results":"43","hashOfConfig":"25"},{"size":2760,"mtime":1614096549232,"results":"44","hashOfConfig":"25"},{"size":1805,"mtime":1614089434288,"results":"45","hashOfConfig":"25"},{"size":588,"mtime":1614097474287,"results":"46","hashOfConfig":"25"},{"size":3968,"mtime":1614072438879,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"srzg7f",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/index.js",[],["101","102"],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/App.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/reportWebVitals.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/home/Home.js",["103"],"import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport './Home.css';\nimport InputField from \"../../components/inputField/InputField\";\nimport Button from \"../../components/button/Button\";\nimport axios from 'axios';\n\nfunction Home() {\n    // form states\n    const [uploadFormArtistName, setUploadFormArtistName] = useState('');\n    const [uploadFormEmail, setUploadFormEmail] = useState('');\n    const [uploadFormSongName, setUploadFormSongName] = useState('');\n    const [uploadFormFile, setUploadFormFile] = useState('');\n    const [uploadFormMessage, setUploadFormMessage] = useState('');\n\n    const [error, setError] = useState('');\n\n    //  console.log({uploadFormArtistName, uploadFormEmail, uploadFormSongName, uploadFormFile, uploadFormMessage});\n\n    async function handleSubmit(e) {\n        setError('');\n        e.preventDefault();\n        try {\n            const formData = {\n                artist_name: uploadFormArtistName,\n                email: uploadFormEmail,\n                song_name: uploadFormSongName,\n                upload_file: uploadFormFile,\n                message: uploadFormMessage\n            }\n            const token = localStorage.getItem('token');\n            const response = await axios.post('http://localhost:8080/api/uploadforms', formData,{\n                header: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                }\n            });\n            console.log(response.data);\n\n        } catch (e) {\n            console.error(e)\n            setError('Er is iets misgegaan met het uploaden');\n        }\n    }\n\n    return (\n        <>\n            <div className=\"background-img__home\">\n                <header className=\"header-container\">\n                    <Link to=\"/\" className=\"active-link\">\n                        <h2 className=\"header__h2\">Producer</h2>\n                    </Link>\n                    <Link to=\"/home-upload-list\">\n                        <h2 className=\"header__h2\">Upload List</h2>\n                    </Link>\n                </header>\n\n                <div className=\"form-container\">\n                    <form onSubmit={handleSubmit}>\n                        <fieldset className=\"form__outline\">\n                            <InputField\n                                id=\"details-name\"\n                                className={\"input-field input-field--white \"}\n                                type=\"text\"\n                                placeholder=\"Oliver heldens\"\n                                value={uploadFormArtistName}\n                                onChange={(e) => setUploadFormArtistName(e.target.value)}\n                            >\n                                Artist Name\n                            </InputField>\n\n                            <InputField\n                                id=\"email-address\"\n                                className={\"input-field input-field--white\"}\n                                type=\"email\"\n                                placeholder=\"oliverheldens@gmail.com\"\n                                value={uploadFormEmail}\n                                onChange={(e) => setUploadFormEmail(e.target.value)}\n                            >\n                                Email Address\n                            </InputField>\n\n                            <InputField\n                                id=\"artist-name\"\n                                className={\"input-field input-field--white\"}\n                                type=\"text\"\n                                placeholder=\"Amazing song\"\n                                value={uploadFormSongName}\n                                onChange={(e) => setUploadFormSongName(e.target.value)}\n                            >\n                                Song name\n                            </InputField>\n\n                            <InputField\n                                id=\"music-upload\"\n                                className={\"input-field input-field--white\"}\n                                type=\"file\"\n                                placeholder=\"amazing-demo.mp3\"\n                                value={uploadFormFile}\n                                onChange={(e) => setUploadFormFile(e.target.value)}\n                            >\n                                Music\n                            </InputField>\n\n                            <label htmlFor=\"personal-message\">personal message</label>\n                            <textarea\n                                name=\"message\"\n                                id=\"personal-message\"\n                                cols=\"30\"\n                                rows=\"5\"\n                                placeholder=\"This music was inspired by...\"\n                                value={uploadFormMessage}\n                                onChange={(e) => setUploadFormMessage(e.target.value)}\n                            />\n                            <Button\n                                className=\"button button__orange button-form\"\n                                type=\"submit\"\n                            >Submit Demo</Button>\n                        </fieldset>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Home;\n","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/about/About.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/signUp/SignUp.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/signIn/SignIn.js",["104","105","106"],"import React, { useState, useContext, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport './SignIn.css';\nimport { AuthContext, useAuthState } from \"../../context/AuthContext\";\nimport logo from \"../../assets/logo/heldeep-logo-white.png\";\nimport axios from \"axios\";\nimport InputField from \"../../components/inputField/InputField\";\nimport Button from \"../../components/button/Button\";\n\nfunction SignIn() {\n    const { login, getAdmin } = useContext(AuthContext);\n    const { isAuthenticated } = useAuthState();\n\n    const [password, setPassword] = useState('');\n    const [username, setUsername] = useState('');\n\n    const history = useHistory();\n\n    const [loading, toggleLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        if (isAuthenticated === true) {\n            // je wordt gepusht na het inloggen naar de home pagina\n            history.push('/');\n        }\n\n    }, [isAuthenticated])\n\n    useEffect(() => {\n        if (getAdmin === true) {\n            history.push('/dashboard')\n        }\n    }, [getAdmin])\n\n    async function onSubmit(e) {\n        // toggleLoading(true);\n        setError('');\n        e.preventDefault();\n\n        try {\n            const response = await axios.post('http://localhost:8080/api/auth/signin', {\n                //de tweede komt uit het formulier, de eerste is de naam wat moet worden meegegeven naar de database\n                username: username,\n                password: password,\n            })\n            // we roepen hier de context-functie login aan. de context gaat dan met de data die\n            // we hebben teruggekregen alles op de juiste plek zetten\n            // handel het inloggen aan de voorkant af met de data die we binnen hebben gekregen\n            login(response.data);\n        } catch(e) {\n            console.error(e);\n            setError('Inloggen is mislukt');\n        }\n        // toggleLoading(false);\n    }\n\n    return (\n        <>\n            <div className=\"background-img__signIn\">\n                <div className=\"container-logo__signIn\">\n                    <img className=\"logo-signIn\" src={logo} alt=\"logo\"/>\n                </div>\n                <div className=\"form-container__signIn\">\n                    <h1>Demodrop</h1>\n                    <form onSubmit={onSubmit} className=\"form-signIn\">\n\n                        <InputField\n                            id=\"username-field\"\n                            className={\"input-field input-field--black\"}\n                            type=\"text\"\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                        >\n                            Username\n                        </InputField>\n\n                        <InputField\n                            id=\"password-field\"\n                            className={\"input-field input-field--black\"}\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                            Password\n                        </InputField>\n\n                        <Button\n                            type=\"submit\"\n                            className={\"button button-form button__purple\"}\n                            disabled={loading}\n                        >\n                            {loading ? 'Loading...' : 'Sign In'}\n                        </Button>\n                        {error && <p>{error}</p>}\n                    </form>\n                    <p>Dont have an account? <Link to=\"/signup\">Create new account</Link></p>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default SignIn;","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/dashboard/Dashboard.js",["107"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Dashboard.css';\nimport DashboardItem from \"../../components/dashboardItem/DashboardItem\";\n\nfunction Dashboard() {\n\n    return(\n        <>\n            <div className=\"background-img__dashboard\">\n                <header className=\"header-container\">\n                    <Link to=\"/dashboard\">\n                        <h2 className=\"header__h2\">Dashboard</h2>\n                    </Link>\n                </header>\n\n                <div className=\"dashboard-list__container\">\n                    <DashboardItem\n                        title=\"Name Artist\"\n                        subTitle=\"Song Name\"\n                        body=\"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ad commodi...\"\n                    />\n                    <DashboardItem\n                        title=\"Name Artist\"\n                        subTitle=\"Song Name\"\n                        body=\"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ad commodi...\"\n                    />\n                    <DashboardItem\n                        title=\"Name Artist\"\n                        subTitle=\"Song Name\"\n                        body=\"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ad commodi...\"\n                    />\n                    <DashboardItem\n                        title=\"Name Artist\"\n                        subTitle=\"Song Name\"\n                        body=\"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ad commodi...\"\n                    />\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Dashboard;\n","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/feedback/Feedback.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/profile/Profile.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/dashboardItem/DashboardItem.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/context/AuthContext.js",["108"],"import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthContext = createContext({});\n\nfunction AuthContextProvider({ children }) {\n\n    const history = useHistory()\n    const [admin, setAdmin] = useState(false);\n\n    // maak hier de authstate aan\n    const [authState, setAuthState] = useState({\n        status: 'pending',\n        error: null,\n        user: null,\n    });\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n\n        async function getUserInfo() {\n            try {\n                const response = await axios.get('http://localhost:8080/api/users', {\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            Authorization: `Bearer ${token}`,\n                        },\n                    }\n                );\n                setAuthState({\n                    ...authState,\n                    user: {\n                        id: response.id,\n                        username: response.username,\n                        email: response.email,\n                    },\n                    status: 'done',\n                })\n\n            } catch (e) {\n                setAuthState({\n                    ...authState,\n                    user: null,\n                    error: e,\n                    status: 'done'\n                });\n            }\n        }\n\n        if (authState.user === null && token) {\n            getUserInfo();\n        } else {\n            setAuthState({\n                ...authState,\n                error: null,\n                user: null,\n                status: 'done'\n            });\n        }\n    }, []);\n\n    function login(data) {\n        console.log(data);\n        // plaats hier de accesstoken in je localstorage\n        localStorage.setItem('token', data.accessToken)\n\n        setAuthState({\n            ...authState,\n            // voeg aan de originele user binnen authState onderstaande informatie toe\n            user: {\n                // de data.'info' komt uit het object wat we binnen krijgen vanuit de database\n                username: data.username,\n                email: data.email,\n                roles: data.roles,\n            }\n        })\n        isAdmin(data.roles);\n    }\n\n    function isAdmin(data){\n        if (data[0].includes(\"ROLE_ADMIN\")) {\n            setAdmin(true);\n        } else {\n            setAdmin(false);\n        }\n        console.log(admin);\n    }\n\n    function logout() {\n        // maak de localStorage leeg\n        localStorage.clear();\n        // zet de user waarde weer op null\n        setAuthState({\n            ...authState,\n            user: null,\n        })\n\n        setAdmin(false);\n        history.push('/signin');\n    }\n\n    function loginAdmin() {\n        return admin;\n    }\n\n    const providerData = {\n        ...authState,\n        login: login,\n        logout: logout,\n        loginAdmin: loginAdmin,\n    }\n\n    return (\n        <AuthContext.Provider value={providerData}>\n            {authState.status === 'done' && children}\n            {authState.status === 'pending' && <p>Loading...</p>}\n        </AuthContext.Provider>\n    );\n}\n\nfunction useAuthState() {\n    const authState = useContext(AuthContext);\n\n    // iemand is geauthoriseerd wanner de status === done\n    // en als de gebruiker in de authstate staat\n    const isDone = authState.status === 'done';\n    const isAuthenticated = authState.user !== null && isDone;\n\n    return {\n        ...authState,\n        isAuthenticated: isAuthenticated,\n    }\n}\n\nexport {\n    AuthContext,\n    AuthContextProvider,\n    useAuthState,\n}","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/inputField/InputField.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/button/Button.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/navBar/NavBar.js",["109","110","111"],"import React, { useContext, useEffect } from 'react';\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport './NavBar.css';\nimport logo from '../../assets/logo/heldeep-logo-white.png';\nimport { AuthContext, useAuthState } from \"../../context/AuthContext\";\n\nfunction NavBar() {\n\n    const history = useHistory();\n\n    const { isAuthenticated } = useAuthState();\n    const { logout } = useContext(AuthContext);\n\n    // useEffect(() => {\n    //     if (isAuthenticated === false) {\n    //         history.push('/signin');\n    //     }\n    // }, [isAuthenticated]);\n\n    return (\n        <nav>\n            <div className=\"nav-container\">\n                <img src={logo} alt=\"logo\"/>\n                {isAuthenticated ? (\n                    <>\n                    <ul>\n                        <li>\n                            <NavLink exact to=\"/\" activeClassName=\"active-link\">Home</NavLink>\n                        </li>\n\n                        <li>\n                            <a href=\"https://heldeeprecords.com/\">Heldeep records</a>\n                        </li>\n\n                        <li>\n                            <NavLink to=\"/about\" activeClassName=\"active-link\">About</NavLink>\n                        </li>\n\n                        <li>\n                            <NavLink to=\"/profile\" activeClassName=\"active-link\">Profile</NavLink>\n                        </li>\n\n                        <li>\n                            <NavLink to=\"/signin\">Logout</NavLink>\n                        </li>\n                    </ul>\n                    </>\n                ) : (\n                    <>\n                    <ul>\n                        <li>\n                            <NavLink exact to=\"/\" activeClassName=\"active-link\">Home</NavLink>\n                        </li>\n\n                        <li>\n                            <a href=\"https://heldeeprecords.com/\">Heldeep records</a>\n                        </li>\n\n                        <li>\n                            <NavLink to=\"/about\" activeClassName=\"active-link\">About</NavLink>\n                        </li>\n\n                        <li>\n                            <NavLink to=\"/profile\" activeClassName=\"active-link\">Profile</NavLink>\n                        </li>\n\n                        <li>\n                            <NavLink to=\"/signin\">Logout</NavLink>\n                        </li>\n                    </ul>\n                    </>\n                )}\n            </div>\n        </nav>\n    );\n}\n\nexport default NavBar;",["112","113"],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/navbar/Navbar.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/uploadList/UploadList.js",["114"],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/listItem/ListItem.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/routing/PrivateRoute.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/detailPage/DetailPage.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/routing/Routes.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/routing/AdminPrivateRoute.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/detailPage/AdminDetailPage.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":16,"column":12,"nodeType":"121","messageId":"122","endLine":16,"endColumn":17},{"ruleId":"119","severity":1,"message":"123","line":19,"column":21,"nodeType":"121","messageId":"122","endLine":19,"endColumn":34},{"ruleId":"124","severity":1,"message":"125","line":28,"column":8,"nodeType":"126","endLine":28,"endColumn":25,"suggestions":"127"},{"ruleId":"124","severity":1,"message":"125","line":34,"column":8,"nodeType":"126","endLine":34,"endColumn":18,"suggestions":"128"},{"ruleId":"119","severity":1,"message":"129","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":16},{"ruleId":"124","severity":1,"message":"130","line":61,"column":8,"nodeType":"126","endLine":61,"endColumn":10,"suggestions":"131"},{"ruleId":"119","severity":1,"message":"132","line":1,"column":29,"nodeType":"121","messageId":"122","endLine":1,"endColumn":38},{"ruleId":"119","severity":1,"message":"133","line":9,"column":11,"nodeType":"121","messageId":"122","endLine":9,"endColumn":18},{"ruleId":"119","severity":1,"message":"134","line":12,"column":13,"nodeType":"121","messageId":"122","endLine":12,"endColumn":19},{"ruleId":"115","replacedBy":"135"},{"ruleId":"117","replacedBy":"136"},{"ruleId":"119","severity":1,"message":"120","line":9,"column":12,"nodeType":"121","messageId":"122","endLine":9,"endColumn":17},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'toggleLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["139"],["140"],"'ListItem' is defined but never used.","React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.",["141"],"'useEffect' is defined but never used.","'history' is assigned a value but never used.","'logout' is assigned a value but never used.",["137"],["138"],"no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [history, isAuthenticated]",{"range":"148","text":"149"},"Update the dependencies array to be: [getAdmin, history]",{"range":"150","text":"151"},"Update the dependencies array to be: [authState]",{"range":"152","text":"153"},[958,975],"[history, isAuthenticated]",[1089,1099],"[getAdmin, history]",[1745,1747],"[authState]"]