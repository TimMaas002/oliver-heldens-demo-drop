[{"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/index.js":"1","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/App.js":"2","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/reportWebVitals.js":"3","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/home/Home.js":"4","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/about/About.js":"5","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/signUp/SignUp.js":"6","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/signIn/SignIn.js":"7","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/dashboard/Dashboard.js":"8","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/feedback/Feedback.js":"9","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/profile/Profile.js":"10","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/dashboardItem/DashboardItem.js":"11","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/context/AuthContext.js":"12","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/inputField/InputField.js":"13","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/button/Button.js":"14","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/navBar/NavBar.js":"15","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/navbar/Navbar.js":"16","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/uploadList/UploadList.js":"17","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/listItem/ListItem.js":"18","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/routing/PrivateRoute.js":"19","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/detailPage/DetailPage.js":"20","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/routing/Routes.js":"21","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/routing/AdminPrivateRoute.js":"22"},{"size":705,"mtime":1612622980980,"results":"23","hashOfConfig":"24"},{"size":360,"mtime":1614281032748,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1611140283576,"results":"26","hashOfConfig":"24"},{"size":5703,"mtime":1614290307626,"results":"27","hashOfConfig":"24"},{"size":1617,"mtime":1612882112570,"results":"28","hashOfConfig":"24"},{"size":4048,"mtime":1614258807423,"results":"29","hashOfConfig":"24"},{"size":3884,"mtime":1614281329086,"results":"30","hashOfConfig":"24"},{"size":1847,"mtime":1614259766730,"results":"31","hashOfConfig":"24"},{"size":6443,"mtime":1614260625706,"results":"32","hashOfConfig":"24"},{"size":3110,"mtime":1613477134416,"results":"33","hashOfConfig":"24"},{"size":1879,"mtime":1614111537299,"results":"34","hashOfConfig":"24"},{"size":3695,"mtime":1614287174355,"results":"35","hashOfConfig":"24"},{"size":741,"mtime":1614252680424,"results":"36","hashOfConfig":"24"},{"size":395,"mtime":1614094664214,"results":"37","hashOfConfig":"24"},{"size":2058,"mtime":1612720536792,"results":"38","hashOfConfig":"24"},{"size":2239,"mtime":1614114567561,"results":"39","hashOfConfig":"24"},{"size":1987,"mtime":1614108924095,"results":"40","hashOfConfig":"24"},{"size":658,"mtime":1614108389134,"results":"41","hashOfConfig":"24"},{"size":410,"mtime":1614072921971,"results":"42","hashOfConfig":"24"},{"size":3655,"mtime":1614282235417,"results":"43","hashOfConfig":"24"},{"size":1610,"mtime":1614260135048,"results":"44","hashOfConfig":"24"},{"size":440,"mtime":1614281135969,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"srzg7f",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/index.js",[],["99","100"],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/App.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/reportWebVitals.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/home/Home.js",["101"],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/about/About.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/signUp/SignUp.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/signIn/SignIn.js",["102","103"],"import React, { useState, useContext, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport './SignIn.css';\nimport { AuthContext, useAuthState } from \"../../context/AuthContext\";\nimport logo from \"../../assets/logo/heldeep-logo-white.png\";\nimport axios from \"axios\";\nimport InputField from \"../../components/inputField/InputField\";\nimport Button from \"../../components/button/Button\";\n\nfunction SignIn() {\n    const { login } = useContext(AuthContext);\n    const { isAuthenticated, isAdmin } = useAuthState();\n\n    const [password, setPassword] = useState('');\n    const [username, setUsername] = useState('');\n\n    const history = useHistory();\n\n    const [loading, toggleLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        if (isAuthenticated === true) {\n            if(isAdmin) {\n                // je wordt gepusht na het inloggen naar de dashboard pagina als je admin bent\n                history.push('/dashboard');\n            } else {\n                // je wordt gepusht na het inloggen naar de home pagina als je user bent\n                history.push('/');\n            }\n        }\n    }, [isAuthenticated])\n\n    async function onSubmit(e) {\n        // toggleLoading(true);\n        setError('');\n        e.preventDefault();\n\n        try {\n            const response = await axios.post(`http://localhost:8080/api/auth/signin`, {\n                //de tweede komt uit het formulier, de eerste is de naam wat moet worden meegegeven naar de database\n                username: username,\n                password: password,\n            })\n            // we roepen hier de context-functie login aan. de context gaat dan met de data die\n            // we hebben teruggekregen alles op de juiste plek zetten\n            // handel het inloggen aan de voorkant af met de data die we binnen hebben gekregen\n            login(response.data);\n\n        } catch(e) {\n            console.error(e);\n            setError('Inloggen is mislukt');\n        }\n        // toggleLoading(false);\n    }\n\n    return (\n        <>\n            <div className=\"background-img__signIn\">\n                <div className=\"container-logo__signIn\">\n                    <img className=\"logo-signIn\" src={logo} alt=\"logo\"/>\n                </div>\n                <div className=\"form-container__signIn\">\n                    <h1>Demodrop</h1>\n                    <form onSubmit={onSubmit} className=\"form-signIn\">\n\n                        <InputField\n                            id=\"username-field\"\n                            className={\"input-field input-field--black\"}\n                            type=\"text\"\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                        >\n                            Username\n                        </InputField>\n\n                        <InputField\n                            id=\"password-field\"\n                            className={\"input-field input-field--black\"}\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                            Password\n                        </InputField>\n\n                        <Button\n                            type=\"submit\"\n                            className={\"button button-form button__purple\"}\n                            disabled={loading}\n                        >\n                            {loading ? 'Loading...' : 'Sign In'}\n                        </Button>\n                        {error && <p>{error}</p>}\n                    </form>\n                    <p>Dont have an account? <Link to=\"/signup\">Create new account</Link></p>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default SignIn;","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/dashboard/Dashboard.js",["104"],"import React, {useEffect, useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport './Dashboard.css';\nimport DashboardItem from \"../../components/dashboardItem/DashboardItem\";\nimport axios from \"axios\";\n\nfunction Dashboard() {\n\n    const [uploads, setUploads] = useState([]);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        async function getProtectedData() {\n            setError('');\n            try {\n                const token = localStorage.getItem('token');\n                const response = await axios.get('http://localhost:8080/api/uploadforms',{\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${token}`,\n                    }\n                })\n                setUploads(response.data);\n            } catch (e) {\n                setError('Something went wrong while getting data')\n            }\n        }\n        getProtectedData();\n    },[])\n\n    return(\n        <>\n            <div className=\"background-img__dashboard\">\n                <header className=\"header-container\">\n                    <Link to=\"/dashboard\">\n                        <h2 className=\"header__h2\">Dashboard</h2>\n                    </Link>\n                </header>\n\n                <div className=\"dashboard-list__container\">\n                    {uploads.map((upload) => {\n                        return <DashboardItem\n                            key={upload.id}\n                            title={upload.artist_name}\n                            subTitle={upload.song_name}\n                            body={upload.message}\n                            link={`/uploadforms/${upload.id}`}\n                        />\n                    })}\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Dashboard;\n","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/feedback/Feedback.js",["105","106"],"import React, {useEffect, useState} from 'react';\nimport './Feedback.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport Button from \"../../components/button/Button\";\nimport InputField from \"../../components/inputField/InputField\";\nimport axios from 'axios';\n\nfunction Feedback() {\n\n    // const { id } = useParams()\n\n    const [message, setMessage] = useState([]);\n\n    const [feedbackMessage, setFeedbackMessage] = useState('');\n    const [feedbackArtistName, setFeedbackArtistName] = useState('');\n\n    const history = useHistory();\n    const [createUserSuccess, setCreateUserSuccess] = useState(false);\n\n    async function getFeedbackOne() {\n        try {\n            const token = localStorage.getItem('token');\n            const response = await axios.get(`http://localhost:8080/api/feedbacktexts/`, {\n                header: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                }\n            });\n            // console.log(response.data);\n            setMessage(response.data);\n            setFeedbackMessage(message[0].message)\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    async function getFeedbackTwo() {\n        try {\n            const token = localStorage.getItem('token');\n            const response = await axios.get(`http://localhost:8080/api/feedbacktexts/`, {\n                header: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                }\n            });\n            // console.log(response.data);\n            setMessage(response.data);\n            setFeedbackMessage(message[1].message)\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    async function getFeedbackThree() {\n        try {\n            const token = localStorage.getItem('token');\n            const response = await axios.get(`http://localhost:8080/api/feedbacktexts/`, {\n                header: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                }\n            });\n            // console.log(response.data);\n            setMessage(response.data);\n            setFeedbackMessage(message[2].message)\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    async function getFeedbackFour() {\n        try {\n            const token = localStorage.getItem('token');\n            const response = await axios.get(`http://localhost:8080/api/feedbacktexts/`, {\n                header: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                }\n            });\n            // console.log(response.data);\n            setMessage(response.data);\n            setFeedbackMessage(message[3].message)\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault(e);\n        setCreateUserSuccess(true);\n    }\n\n    return (\n        <>\n            <div className=\"background-img__feedback\">\n                <div className=\"feedback-header\">\n                    <div className=\"feedback-header__arrow\">\n                        <FontAwesomeIcon icon={faArrowLeft} onClick={() => {\n                            history.goBack()\n                        }}/>\n                    </div>\n                    <h2 className=\"feedback-header__h2\">\n                        Feedback\n                    </h2>\n                </div>\n                <div className=\"feedback-container\">\n                    <div className=\"feedback-container__buttons\">\n                        <Button\n                            type=\"button\"\n                            className=\"button-feedback\"\n                            onClick={getFeedbackOne}\n                        >i like this!...</Button>\n                        <Button\n                            type=\"button\"\n                            className=\"button-feedback\"\n                            onClick={getFeedbackTwo}\n                        >i would change...</Button>\n                        <Button\n                            type=\"button\"\n                            className=\"button-feedback\"\n                            onClick={getFeedbackThree}\n                        >i want to use this...</Button>\n                        <Button\n                            type=\"button\"\n                            className=\"button-feedback\"\n                            onClick={getFeedbackFour}\n                        >for the future...</Button>\n                    </div>\n                    <div className=\"feedback-container__form\">\n                        <form onSubmit={handleSubmit}>\n                            <InputField\n                                id=\"feedback-artist-name\"\n                                className={\"input-field input-field--white\"}\n                                type=\"text\"\n                                placeholder=\"Artist name here\"\n                                value={feedbackArtistName}\n                                onChange={(e) => {setFeedbackArtistName(e.target.value)}}\n                            >\n                                Name / Artist name\n                            </InputField>\n                            <label htmlFor=\"feedback-message\"/>\n                            <textarea\n                                name=\"message\"\n                                id=\"feedback-message\"\n                                cols=\"5\"\n                                rows=\"20\"\n                                placeholder=\"Press 1 of the buttons to reveal a message\"\n                                value={feedbackMessage}\n                                onChange={(e) => {setFeedbackMessage(e.target.value)}}\n                            />\n                            <Button\n                                className=\"button button-form button__orange\"\n                                type=\"submit\"\n                            >Sent feedback</Button>\n                            {createUserSuccess === true && <p>The feedback was sent succesfully to (artist_name)</p>}\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\n\nexport default Feedback;","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/profile/Profile.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/dashboardItem/DashboardItem.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/context/AuthContext.js",["107"],"import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthContext = createContext({});\n\nfunction AuthContextProvider({ children }) {\n\n    const history = useHistory()\n\n    // maak hier de authstate aan\n    const [authState, setAuthState] = useState({\n        status: 'pending',\n        error: null,\n        user: null,\n    });\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n\n        async function getUserInfo() {\n            try {\n                // We kunnen de gebruikersdata ophalen omdat we onszelf authenticeren met de token\n                const response = await axios.get(`http://localhost:8080/api/users`, {\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            Authorization: `Bearer ${token}`,\n                        },\n                    }\n                );\n\n                // met het resultaat vullen we de context\n                setAuthState({\n                    ...authState,\n                    user: {\n                        id: response.id,\n                        username: response.username,\n                        email: response.email,\n                        roles: response.roles,\n                    },\n                    status: 'done',\n                });\n\n            } catch (e) {\n                // Gaat er toch iets mis? Dan zetten we de error in de context\n                setAuthState({\n                    ...authState,\n                    user: null,\n                    error: e,\n                    status: 'done',\n                });\n            }\n        }\n\n        if (authState.user === null && token) {\n            getUserInfo();\n        } else {\n            setAuthState({\n                ...authState,\n                error: null,\n                user: null,\n                status: 'done'\n            });\n        }\n\n    }, []);\n\n    function login(data) {\n        console.log(data);\n        // plaats hier de accesstoken in je localstorage\n        localStorage.setItem('token', data.accessToken)\n\n        setAuthState({\n            ...authState,\n            // voeg aan de originele user binnen authState onderstaande informatie toe\n            user: {\n                // de data.'info' komt uit het object wat we binnen krijgen vanuit de database\n                username: data.username,\n                email: data.email,\n                roles: data.roles,\n                isAdmin: data.roles.includes(\"ROLE_ADMIN\"),\n            }\n        })\n        // console.log(\"USER ID\", data.id);\n    }\n\n    function logout() {\n        localStorage.clear();\n        setAuthState({\n            ...authState,\n            user: null,\n        })\n        history.push('/login');\n    }\n\n    const providerData = {\n        ...authState,\n        login,\n        logout,\n    };\n\n    return (\n        <AuthContext.Provider value={providerData}>\n            {authState.status === 'done' && children}\n            {authState.status === 'pending' && <p>Loading...</p>}\n        </AuthContext.Provider>\n    );\n}\n\nfunction useAuthState() {\n    const authState = useContext(AuthContext);\n\n    // iemand is geauthoriseerd wanner de status === done\n    // en als de gebruiker in de authstate staat\n    const isDone = authState.status === 'done';\n    const isAuthenticated = authState.user !== null && isDone;\n    const isAdmin = authState.user !== null && authState.user.isAdmin;\n\n    return {\n        ...authState,\n        isAuthenticated: isAuthenticated,\n        isAdmin: isAdmin,\n    }\n}\n\nexport {\n    AuthContext,\n    AuthContextProvider,\n    useAuthState,\n}","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/inputField/InputField.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/button/Button.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/navBar/NavBar.js",["108","109","110"],"import React, { useContext, useEffect } from 'react';\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport './NavBar.css';\nimport logo from '../../assets/logo/heldeep-logo-white.png';\nimport { AuthContext, useAuthState } from \"../../context/AuthContext\";\n\nfunction NavBar() {\n\n    const history = useHistory();\n\n    const { isAuthenticated } = useAuthState();\n    const { logout } = useContext(AuthContext);\n\n    // useEffect(() => {\n    //     if (isAuthenticated === false) {\n    //         history.push('/signin');\n    //     }\n    // }, [isAuthenticated]);\n\n    return (\n        <nav>\n            <div className=\"nav-container\">\n                <img src={logo} alt=\"logo\"/>\n                {isAuthenticated ? (\n                    <>\n                    <ul>\n                        <li>\n                            <NavLink exact to=\"/\" activeClassName=\"active-link\">Home</NavLink>\n                        </li>\n\n                        <li>\n                            <a href=\"https://heldeeprecords.com/\">Heldeep records</a>\n                        </li>\n\n                        <li>\n                            <NavLink to=\"/about\" activeClassName=\"active-link\">About</NavLink>\n                        </li>\n\n                        <li>\n                            <NavLink to=\"/profile\" activeClassName=\"active-link\">Profile</NavLink>\n                        </li>\n\n                        <li>\n                            <NavLink to=\"/signin\">Logout</NavLink>\n                        </li>\n                    </ul>\n                    </>\n                ) : (\n                    <>\n                    <ul>\n                        <li>\n                            <NavLink exact to=\"/\" activeClassName=\"active-link\">Home</NavLink>\n                        </li>\n\n                        <li>\n                            <a href=\"https://heldeeprecords.com/\">Heldeep records</a>\n                        </li>\n\n                        <li>\n                            <NavLink to=\"/about\" activeClassName=\"active-link\">About</NavLink>\n                        </li>\n\n                        <li>\n                            <NavLink to=\"/profile\" activeClassName=\"active-link\">Profile</NavLink>\n                        </li>\n\n                        <li>\n                            <NavLink to=\"/signin\">Logout</NavLink>\n                        </li>\n                    </ul>\n                    </>\n                )}\n            </div>\n        </nav>\n    );\n}\n\nexport default NavBar;",["111","112"],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/navbar/Navbar.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/uploadList/UploadList.js",["113"],"import React, { useState, useEffect} from 'react';\nimport { Link } from \"react-router-dom\";\nimport './UploadList.css';\nimport ListItem from \"../../components/listItem/ListItem\";\nimport axios from 'axios';\n\nfunction UploadList() {\n    const [uploads, setUploads] = useState([]);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        async function getProtectedData() {\n            setError('');\n            try {\n                const token = localStorage.getItem('token');\n                const response = await axios.get('http://localhost:8080/api/uploadforms',{\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${token}`,\n                    }\n                })\n                setUploads(response.data);\n            } catch (e) {\n                setError('Something went wrong while getting data')\n            }\n        }\n        getProtectedData();\n    },[])\n\n    return(\n        <>\n            <div className=\"background-img__upload-list\">\n                <header className=\"header-container\">\n                    <Link to=\"/\">\n                        <h2 className=\"header__h2\">Producer</h2>\n                    </Link>\n                    <Link to=\"/home-upload-list\" className=\"active-link\">\n                        <h2 className=\"header__h2\">Upload List</h2>\n                    </Link>\n                </header>\n\n                <div className=\"upload-list__container\">\n                    {uploads.map((upload) => {\n                        return <ListItem\n                            key={upload.id}\n                            title={upload.artist_name}\n                            subTitle={upload.song_name}\n                            body={upload.message}\n                            link={`/uploadforms/${upload.id}`}\n                        />\n                    })}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default UploadList;","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/components/listItem/ListItem.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/routing/PrivateRoute.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/pages/detailPage/DetailPage.js",["114","115","116"],"import React, {useContext, useEffect, useState} from 'react';\nimport './DetailPage.css';\nimport Button from \"../../components/button/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCommentAlt, faDownload, faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {useAuthState} from \"../../context/AuthContext\";\n\nfunction DetailPage() {\n\n    const { isAdmin } = useAuthState();\n\n    const { id } = useParams();\n    const [error, setError] = useState('');\n    const [upload, setUpload] = useState('');\n\n    const history = useHistory()\n\n    useEffect(() =>{\n        getUpload();\n\n    }, [])\n\n    async function getUpload() {\n        setError('');\n\n        try {\n            const token = localStorage.getItem('token');\n            const response = await axios.get(`http://localhost:8080/api/uploadforms/${id}`,{\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                }\n            })\n            setUpload(response.data);\n\n        } catch (e) {\n            setError('Something went wrong while getting data')\n        }\n    }\n\n    return(\n        <>\n            <div className=\"background-img__detailpage\">\n                <div className=\"detailpage-header\">\n                </div>\n                <div className=\"detailpage-container\">\n                    <div className=\"detailpage-container__content\">\n                        <div className=\"detailpage__arrow\">\n                            <FontAwesomeIcon icon={faArrowLeft} onClick={() => {history.goBack()}}/>\n                        </div>\n                        <h2 className=\"detailpage-container__title\">{upload.artist_name}</h2>\n                        <h4 className=\"detailpage-container__subTitle\">{upload.song_name}</h4>\n                        <p className=\"detailpage-container__info\">{upload.message}</p>\n                    </div>\n                    {isAdmin ? (\n                        <div className=\"detailpage-container__buttons\">\n                            <Button\n                                type=\"button\"\n                                className={\"button button-detailpage button-detailpage__purple\"}\n                                onClick={() => {history.push('/')}}\n                            >\n                                <div className=\"detailpage__icon\">\n                                    <FontAwesomeIcon icon={faDownload} onClick={() => {history.push('/')}}/>\n                                </div>\n                                download\n                            </Button>\n                            <Button\n                                type=\"button\"\n                                className={\"button button-detailpage button-detailpage__orange\"}\n                                onClick={() => {history.push('/feedback')}}\n                            >\n                                <div className=\"detailpage__icon\">\n                                    <FontAwesomeIcon icon={faCommentAlt} onClick={() => {history.push('/feedback')}}/>\n                                </div>\n                                feedback\n                            </Button>\n                        </div>\n                    ) : (\n                        <div>\n                            <p>Oliver heldens and his team are giving your demo feedback!</p>\n                        </div>\n                    )}\n                    {/*{isAdmin && }*/}\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default DetailPage;\n","/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/routing/Routes.js",[],"/Users/timmaas/WebstormProjects/oliver-heldens-demo-drop/src/routing/AdminPrivateRoute.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":16,"column":12,"nodeType":"123","messageId":"124","endLine":16,"endColumn":17},{"ruleId":"121","severity":1,"message":"125","line":19,"column":21,"nodeType":"123","messageId":"124","endLine":19,"endColumn":34},{"ruleId":"126","severity":1,"message":"127","line":32,"column":8,"nodeType":"128","endLine":32,"endColumn":25,"suggestions":"129"},{"ruleId":"121","severity":1,"message":"122","line":10,"column":12,"nodeType":"123","messageId":"124","endLine":10,"endColumn":17},{"ruleId":"121","severity":1,"message":"130","line":1,"column":16,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"131","line":5,"column":21,"nodeType":"123","messageId":"124","endLine":5,"endColumn":30},{"ruleId":"126","severity":1,"message":"132","line":66,"column":8,"nodeType":"128","endLine":66,"endColumn":10,"suggestions":"133"},{"ruleId":"121","severity":1,"message":"130","line":1,"column":29,"nodeType":"123","messageId":"124","endLine":1,"endColumn":38},{"ruleId":"121","severity":1,"message":"134","line":9,"column":11,"nodeType":"123","messageId":"124","endLine":9,"endColumn":18},{"ruleId":"121","severity":1,"message":"135","line":12,"column":13,"nodeType":"123","messageId":"124","endLine":12,"endColumn":19},{"ruleId":"117","replacedBy":"136"},{"ruleId":"119","replacedBy":"137"},{"ruleId":"121","severity":1,"message":"122","line":9,"column":12,"nodeType":"123","messageId":"124","endLine":9,"endColumn":17},{"ruleId":"121","severity":1,"message":"138","line":1,"column":16,"nodeType":"123","messageId":"124","endLine":1,"endColumn":26},{"ruleId":"121","severity":1,"message":"122","line":15,"column":12,"nodeType":"123","messageId":"124","endLine":15,"endColumn":17},{"ruleId":"126","severity":1,"message":"139","line":23,"column":8,"nodeType":"128","endLine":23,"endColumn":10,"suggestions":"140"},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'toggleLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'isAdmin'. Either include them or remove the dependency array.","ArrayExpression",["143"],"'useEffect' is defined but never used.","'useParams' is defined but never used.","React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.",["144"],"'history' is assigned a value but never used.","'logout' is assigned a value but never used.",["141"],["142"],"'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'getUpload'. Either include it or remove the dependency array.",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [history, isAdmin, isAuthenticated]",{"range":"152","text":"153"},"Update the dependencies array to be: [authState]",{"range":"154","text":"155"},"Update the dependencies array to be: [getUpload]",{"range":"156","text":"157"},[1181,1198],"[history, isAdmin, isAuthenticated]",[1985,1987],"[authState]",[714,716],"[getUpload]"]